# Домен по которому будет открываться проект (Обязательно указать его в hosts файле системы)
# Можно изменять по желанию или использовать один единый домен для всех проектов чтобы при новых проектах не добавлять в hosts файл
DOMAIN=bitrix.local

# Версия PHP доступны версии 7.4.0, 7.4.29, 8.1.0 8.1.0-fpm-alpine-bitrix-xdebug
PHP_VERSION=8.1.0-fpm-alpine-bitrix

# Директория проекта который будет смонтирован в контейнеры nginx и php (Путь относительно файла docker-compose.yml)
# Изменяется в зависимости от проекта, если docker-compose.yml находится на одном уровне с папкой проекта то следует указать: ./<папка проекта>
# В случае если имеются скрипты которые находятся за пределами проекта Bitrix например папка vendor от пакетного менеджера Composer,
# то ее следует вручную смонтировать в контейнер PHP, для этого в сервисе PHP файла docker-compose.yml добавить в секцию volumes строку
# - <путь к папке vendor>:<путь в контейнере куда монтируем>
# Например:
# Файл docker-compose.yml у нас лежит на одном уровне с папкой проекта и vendor
# Значение переменной CONTAINER_PROJECT_DIR=/home/www-data/public_html, тогда путь для монтирования папки vendor будет
# - ./vendor:/var/www/vendor
PROJECT_DIR=./public_html

# Название проекта для разграничения разных проектов
# Обязательно к изменению для разграничения проектов
COMPOSE_PROJECT_NAME=bitrix

# Название сервиса PHP из файла docker-compose.yml
# Не обязательно для изменения если не изменялось название сервиса PHP в docker-compose.yml
CONTAINER_PHP=php

# Директория проекта в контейнерах Nginx и PHP (Указывать только полные пути например: /var/www/app)
# Не обязательно для изменения
CONTAINER_PROJECT_DIR=/home/www-data/public_html

# Название сервиса Redis для Push&Pull сервера (Указывается название сервиса Redis из docker-compose.yml)
# Не обязательно для изменения если не изменялось название сервиса Redis в docker-compose.yml
REDIS_HOST=redis

# Секретный ключ для Push&Pull сервера (Его необходимо указывать в настройках модуля Push&Pull)
# Использовать локальный установленный Push&Pull сервер версии 2.0, путь для публикации команд со стороны сервера указать http://nginx:8895/bitrix/pub/
# Не обязательно для изменения
SECURITY_KEY=security

# Название сервиса MailHog из файла docker-compose.yml
# Не обязательно для изменения если не изменялось название сервиса MailHog в docker-compose.yml
# На порту 8025 будет доступен web интерфейс почты, открыть можно просто http://localhost:8025 или указанный домен http://DOMAIN:8025
MAILHOG_HOST=mailhog

# Пароль от root пользователя MySql
MYSQL_ROOT_PASSWORD=root

# Идентификаторы пользователя и группы пользователя в PHP контейнере
# В linux системах обязательно указать UID и GID пользователя хост машины для избежания проблем прав на файлы
UID=1000
GID=1000
